var p=Object.defineProperty;var k=(o,c,t)=>c in o?p(o,c,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[c]=t;var r=(o,c,t)=>(k(o,typeof c!="symbol"?c+"":c,t),t);var l=(o,c,t)=>new Promise((d,s)=>{var a=e=>{try{i(t.next(e))}catch(h){s(h)}},n=e=>{try{i(t.throw(e))}catch(h){s(h)}},i=e=>e.done?d(e.value):Promise.resolve(e.value).then(a,n);i((t=t.apply(o,c)).next())});(function(){"use strict";class o{constructor(a){r(this,"error",!1);r(this,"id");r(this,"payload",null);r(this,"success",!1);this.id=a}pass(a){this.error=!1,this.payload=a,this.success=!0}fail(a){this.error=!0,this.payload=a,this.success=!1}}class c extends Error{constructor(a,n){super(`Background task "${a}" not found in "${n}" controller`);this.name="BackgroundTask Error"}}class t{constructor(a){r(this,"service");this.service=a,self.addEventListener("message",n=>l(this,null,function*(){const{id:i,taskName:e,parameters:h}=n.data,u=new o(i);e in this.service&&typeof this.service[e]=="function"?yield this.service[e](...h).then(f=>u.pass(f)).catch(f=>u.fail(f)):u.fail(new c(e,this.constructor.name)),self.postMessage(u)}))}}const d={fetchMonitors(){return l(this,null,function*(){return yield fetch("http://localhost:8000/api/1.0/monitors").then(s=>s.json()).catch(s=>s)})},fetchTodos(){return l(this,null,function*(){return yield fetch("https://jsonplaceholder.typicode.com/todos").then(s=>s.json()).catch(s=>s)})},fetchPosts(){return l(this,null,function*(){return yield fetch("https://jsonplaceholder.typicode.com/posts/1").then(s=>s.json()).catch(s=>s)})}};new t(d)})();
